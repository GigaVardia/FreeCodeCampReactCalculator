{"version":3,"sources":["index.js","Calculator.js"],"names":["ReactDOM","render","StrictMode","document","getElementById","isNum","isOperator","endsWithOperator","Calculator","props","state","currentVal","prevVal","formula","evaluated","lastClicked","handleNumbers","bind","handleOperators","handleEvaluate","handleDecimal","initialize","maxDigitWarning","this","setState","setTimeout","e","val","target","value","expression","replaceAll","test","slice","answer","Math","round","eval","toString","includes","length","className","Formula","Output","currentValue","Buttons","numbers","operator","init","equals","decimal","Component","id","onClick"],"mappings":"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","file":"static/js/main.b051f4bd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import './scss/calculator.scss';\nimport { React, Component } from 'react'\n\nconst isNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n  isOperator = ['/', '×', '-', '+'],\n  endsWithOperator = /[x+‑/]$/;\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      evaluated: false,\n      lastClicked: '',\n    }\n\n    this.handleNumbers = this.handleNumbers.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\n  }\n\n  maxDigitWarning() {\n    const { currentVal} = this.state;\n    this.setState({\n      currentVal: 'Digit Limit Met',\n      prevVal: currentVal\n    });\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal}), 1000);\n  }\n\n  handleEvaluate(e) {\n    const val = e.target.value;\n    const {formula, evaluated} = this.state;\n    let expression = formula;\n    expression = expression.replaceAll(\"×\", \"*\");\n    while (endsWithOperator.test(expression)) {\n      expression = expression.slice(0, -1);\n    }\n\n    if (!evaluated) {\n      let answer = Math.round(10000 * eval(expression)) / 10000;\n      this.setState({\n        currentVal: answer.toString(),\n        formula: endsWithOperator.test(formula)? \n          formula.slice(0, -1) + val + answer.toString() : \n          formula + val + answer.toString(),\n        evaluated: true\n      })\n    }\n  }\n\n  handleOperators(e) {\n    const val = e.target.value;\n    const { currentVal, formula, evaluated, lastClicked } = this.state;\n\n    if (!evaluated) {\n      if (isNum.includes(lastClicked)) {\n        this.setState({\n          currentVal: val,\n          formula: formula + val,\n          prevVal: currentVal,\n          lastClicked: val\n        })\n      } else if (isOperator.includes(lastClicked)) {\n        this.setState({\n          currentVal: val,\n          formula: formula.slice(0, -1) + val,\n          prevVal: currentVal,\n          lastClicked: val\n        })\n      }\n    } else {\n      this.setState({\n        currentVal: val,\n        formula: currentVal + val,\n        lastClicked: val,\n        evaluated: false\n      })\n    }\n  }\n\n  handleNumbers(e) {\n    const val = e.target.value;\n    const { currentVal, formula, evaluated, lastClicked} = this.state;\n    if (!currentVal.includes('Limit')) {\n      if (currentVal.length >= 30) {\n        this.maxDigitWarning();\n      } else if (!evaluated) {\n        if (isNum.includes(val)) {\n          this.setState({\n            prevVal: currentVal,\n            currentVal: currentVal === '0' ? val :\n              isOperator.includes(currentVal) ? val : currentVal + val,\n            formula: formula + val,\n            lastClicked: val\n          })\n        } else if (lastClicked === '.') {\n          this.setState({\n            currentVal: currentVal + val,\n            prevVal: currentVal,\n            lastClicked: val,\n            formula: formula + val\n          })\n        }\n      } else if (evaluated) {\n        this.initialize();\n        this.setState({\n          currentVal: val,\n          formula: val,\n          lastClicked: val\n        })\n      } \n    }\n  }\n\n  handleDecimal(e) {\n    const val = e.target.value;\n\n    const {currentVal,formula, evaluated, lastClicked} = this.state;\n\n    if (!evaluated) {\n      if (isNum.includes(lastClicked)) {\n        this.setState({\n          currentVal: currentVal + val,\n          formula: formula + val,\n          prevVal: currentVal,\n          lastClicked: val\n        })\n      }\n    } else {\n      this.initialize();\n      this.setState({\n        currentVal: '0' + val,\n        lastClicked: val\n      })\n    }\n  }\n\n  initialize() {\n    this.setState({\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      evaluated: false,\n      lastClicked: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"calculator calculator-outer\">\n        <div className=\"calculator-inner\">\n          <Formula formula={this.state.formula} />\n          <Output currentValue={this.state.currentVal} />\n          <Buttons\n            numbers={this.handleNumbers}\n            operator={this.handleOperators}\n            init={this.initialize}\n            equals={this.handleEvaluate}\n            decimal={this.handleDecimal} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Formula extends Component {\n  render() {\n    return (\n      <div className=\"calculator-inner-formulaScreen\">\n        <div className=\"calculator-inner-formulaScreen-formula\">\n          {this.props.formula}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Output extends Component {\n  render() {\n    return (\n      <div className=\"calculator-inner-output\" id=\"display\">\n        <div className=\"calculator-inner-output-value\">\n          {this.props.currentValue}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Buttons extends Component {\n  render() {\n    return (\n      <div className=\"calculator-inner-buttons\">\n        <button className='calculator-inner-buttons-item item-AC'\n          id=\"clear\"\n          value='AC'\n          onClick={this.props.init}\n        >\n          AC\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"divide\"\n          value='/'\n          onClick={this.props.operator}\n        >\n          /\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"multiply\"\n          value='×'\n          onClick={this.props.operator}\n        >\n          X\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"seven\"\n          onClick={this.props.numbers}\n          value='7'\n        >\n          7\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"eight\"\n          onClick={this.props.numbers}\n          value='8'\n        >\n          8\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"nine\"\n          onClick={this.props.numbers}\n          value='9'\n        >\n          9\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"subtract\"\n          value='-'\n          onClick={this.props.operator}\n        >\n          -\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"four\"\n          onClick={this.props.numbers}\n          value='4'\n        >\n          4\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"five\"\n          onClick={this.props.numbers}\n          value='5'\n        >\n          5\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"six\"\n          onClick={this.props.numbers}\n          value='6'\n        >\n          6\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"add\"\n          value='+'\n          onClick={this.props.operator}\n        >\n          +\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"one\"\n          onClick={this.props.numbers}\n          value='1'\n        >\n          1\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"two\"\n          onClick={this.props.numbers}\n          value='2'\n        >\n          2\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"three\"\n          onClick={this.props.numbers}\n          value='3'\n        >\n          3\n          </button>\n\n        <button className='calculator-inner-buttons-item item-equals'\n          id=\"equals\"\n          value='='\n          onClick={this.props.equals}\n        >\n          =\n          </button>\n\n        <button className='calculator-inner-buttons-item item-zero'\n          id=\"zero\"\n          onClick={this.props.numbers}\n          value='0'\n        >\n          0\n          </button>\n\n        <button className='calculator-inner-buttons-item'\n          id=\"decimal\"\n          onClick={this.props.decimal}\n          value='.'\n        >\n          .\n          </button>\n      </div>\n    )\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}